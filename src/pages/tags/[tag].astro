---
import BlogPost from '../../components/BlogPost.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { sortByDate } from '../../utils';

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../posts/*.md');
  const sortedPosts = allPosts.sort(sortByDate);

  const uniqueTags = [
    ...new Set(sortedPosts.map((post) => post.frontmatter.tags).flat()),
  ];
  return uniqueTags.map((tag) => {
    const filterPosts = sortedPosts.filter((post) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filterPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
  <div class='flex flex-col items-center justify-center gap-6'>
    <p class='text-zinc-400 md:mb-16'>
      Results for: <span class='uppercase font-bold text-gray-300'>{tag}</span>
    </p>
    {
      posts.length > 1 ? (
        <div class='grid grid-cols-1 md:grid-cols-2 gap-16 max-w-[90%] md:max-w-[70%] lg:max-w-[60%] mx-auto mt-16 md:mt-0'>
          {posts.map((post) => (
            <BlogPost
              url={post.url}
              title={post.frontmatter.title}
              excerpt={post.frontmatter.excerpt}
              date={post.frontmatter.date}
              tags={post.frontmatter.tags}
            />
          ))}
        </div>
      ) : (
        <div class='flex items-center justify-center max-w-[90%] md:max-w-[70%] lg:max-w-[60%] mx-auto mt-16 md:mt-0'>
          {posts.map((post) => (
            <BlogPost
              url={post.url}
              title={post.frontmatter.title}
              excerpt={post.frontmatter.excerpt}
              date={post.frontmatter.date}
              tags={post.frontmatter.tags}
            />
          ))}
        </div>
      )
    }
  </div>
</BaseLayout>
